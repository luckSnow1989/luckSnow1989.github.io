1.㈠页面显示中文乱码   
2.  
3.㈡传递参数中文乱码   
4.  
5.㈢国际化资源文件乱码   
6.  
7.下面就这三中情况介绍怎么在具体项目中处理这些乱码问题。而对于整体的处理思想，是要统一编码为: UTF-8.(以myeclipse6支持的struts1.3为准)   
8.  
9.㈠页面显示中文乱码   
10.  
11.      对于在页面中显示出现乱码，这个问题比较简单，便是检查你的JSP文件里是不是出现了中文要处理，因为JSP默认的编码格式为“ISO-8859-1”，当JSP中出现要处理的中文时，其显示就出现乱码了，这种情况一般出现在手写JSP，或修改时。因为在myeclipse6.0中，如果出现了编码错误时，程序不会让你保存，而是会提示你注意编码，这点很好。具体的修改办法是把   
12.  
13.  
14.1<%.@ page language="java" import="java.util." pageEncoding="ISO-8859-1">  
15.2 
16.  
17.改成：   
18.1  <%.@ page language="java" import="java.util." pageEncoding="UTF-8">   
19.  
20.㈡传递参数中文乱码   
21.  
22.         传递参数出现的乱码，参数的内容为中文。比如在struts应用中，简单的一个登录界面中，需要传递的登录名为中文时，你没经处理之前，是会出现乱码传递的，为了让我们能看到显示的乱码，我们在对应的Action类的子类里，修改一下，用System.out把接受到的参数输出，代码如下：   
23. 1public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request,  
24. 2        HttpServletResponse response) {  
25. 3    DynaActionForm loginForm = (DynaActionForm) form;  
26. 4    String username = (String) loginForm.get("username");  
27. 5    String password = (String) loginForm.get("password");  
28. 6    System.out.println("username:"+username);  
29. 7    System.out.println("password:"+password);  
30. 8    if (username.equals("ivorytower") && password.equals("123456")) {  
31. 9        return mapping.findForward("success");    }  
32.10    return mapping.findForward("fail");    }  
33.  
34.那么当你提交了中文输入后就会出现乱码了。   
35.  
36.具体的解决方法：   
37.  
38.①修改Tomcat---->conf----->server.xml文件，在修改端口的标签后面加一行代码，如下：     
39.1<Connector port="8080" protocol="HTTP/1.1"  
40.2               connectionTimeout="20000"  
41.3               redirectPort="8443"  URIEncoding="UTF-8"/>  
42.  
43.  
44.②编写过滤器Filter   
45. 1   
46. 2import java.io.IOException;  
47. 3 
48. 4import javax.servlet.Filter;  
49. 5import javax.servlet.FilterChain;  
50. 6import javax.servlet.FilterConfig;  
51. 7import javax.servlet.ServletException;  
52. 8import javax.servlet.ServletRequest;  
53. 9import javax.servlet.ServletResponse;  
54.10 
55.11public class CharacterEncodingFilter implements Filter {  
56.12 
57.13    @Override  
58.14    public void destroy() {  
59.15    }  
60.16 
61.17    @Override  
62.18    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException,ServletException   {  
63.19    request.setCharacterEncoding("utf-8");  
64.20    chain.doFilter(request, response);  
65.21    }  
66.22 
67.23    @Override  
68.24    public void init(FilterConfig arg0) throws ServletException {  
69.25    }  
70.26 
71.27}  
72.28 
73.  
74.  
75.  
76.  利用过滤器，把requst传递的中文参数都设成“UTF-8”编码。   
77.  
78.③修改web.xml文件   
79.  
80.    打开项目里的web.xml文件，在前面加上如下代码：   
81.  
82.   
83. 1     
84. 2 <filter>  
85. 3 <filter-name>characterEncoding</filter-name>  
86. 4 <filter-class>com.example.CharacterEncodingFilter</filter-class>  
87. 5 </filter>  
88. 6 <filter-mapping>  
89. 7 <filter-name>characterEncoding</filter-name>  
90. 8 <url-pattern>/*</url-pattern>  
91. 9 </filter-mapping>  
92.10 
93.  
94.  
95.注意其过滤的URL为“/*”，表示当前的request请求。为了使设置生效，重起tomcat。   
96.  
97.㈢国际化资源文件乱码   
98.  
99.     ①利用JDK的native2ascii工具进行编码转换   
100.  
101.国际化问题，主要是为了处理文件在浏览器上的显示问题，还是以登录界面来说，比如在中文浏览器上，我们要看到中文显示，对应在英文浏览器上要显示英文。那么我们在登录那个界面处理上，就不能直接写上我们的“用户名”“密码”等标识了。就要用标记转换输出了，修改为：   
102.          
103.1<bean:message key="example.login.username"/>  
104.  
105.  
106.  再者，打开项目下的资源配置文件ApplicationResources.properties，依据上面所写key值，设定成我们要的默认值（显示英文），比如   
107.引用        
108.1#Resource for Parameter 'com.example.struts.ApplicationResources   
109.2#Project webexample2  
110.3example.login.username=username   
111.4example.login.password=password   
112.现在我们动手新建一个资源文件,让其能显示中文，直接Ctrl+C，Ctrl+V。改名为ApplicationResources_zh.properties，代码如下：   
113.引用         
114.1#Resource for Parameter 'com.example.struts.ApplicationResources   
115.2#Project webexample2  
116.3example.login.username=用户名   
117.4example.login.password=密码  
118.但保存，myeclipse会报错，这时我们需要修改资源文件的编码格式。Windons---->Preferences---->Content Type------>Text----->JavaPropertiesFile,把其Default encoding改为“utf-8”,按“update”更新。这样就能进行保存了。但是当我们进行验证会不是成功时，仍然给我们的是乱码。   
119.  
120.不急，我们还得做一项任务，打开DOS窗口，CMD到资源文件所在目录，运用JDK的native2ascii工具把我们新建的资源文件改成另一个名字的资源文件，例如bank.properties。命令如下：   
121.引用       
122.>native2ascii -encoding gbk ApplicationResources_zh.properties bank.properties   
123.  
124.打开bank.properties资源文件，自动生成的代码如下：   
125.引用        
126.#Generated by ResourceBundle Editor (http://eclipse-rbe.sourceforge.net)   
127.  
128.example.login.username = \u7528\u6237\u540D   
129.example.login.password = \u5BC6\u7801  
130.然后在myeclipse窗口中，把原来新建ApplicationResources_zh.properties 删除，并把bank.properties改为ApplicationResources_zh.properties （为了方便记忆，管理）。然后重起tomcat或进行reload文件，我们发现乱码问题没有了。   
131.  
132.②利用Eclipse ResourceBundle Editor插件工具   
133.  
134.      以上我们是利用了JDK的native2ascii工具来处理国际化问题，但在EC中，还有一种更方便的工具专门用来处理编辑java的资源文件国际化乱码问题，即Eclipse ResourceBundle Editor插件工具。安装了这个插件后，我们能进行方便的可视化资源文件编辑。推荐。。   
135.  
136.     总结：其实，对于乱码，我在开发中很少遇到，我都是遵循着这样的原则：  
137.1、页面编码为UTF-8 
138.2、数据库编码为gb2312（MySQL）  
139.3、web容器编码为UTF-8 
140.4、使用过滤器统一过滤编码  
141.还需要注意的是使用struts1时，表单提交的方式要是POST。要不然有可能中文提交后在FF上就先被转化成系统默认编码之类去了……   
