1、功能描述

   合同录入，合同下包括货物信息，一款货物可有一个或者多个附件。合同要实现打印。
   按月对合同进行统计，要实现打印。
   合同在未上报时，只能销售部门看到，只有当上报以后，报运业务的专责才可以看到。上报后未进行报运前，可以取消，进行修改后，再上报。
   走货有时一次全部报运，有时分多次报运。


2、数据库结构

主从3张表
	
==购销合同主表	CONTRACT_C

编号		CONTRACT_ID	varchar(40)
收购方		OFFEROR		varchar(200)
合同号		CONTRACT_NO	varchar(20)
签单日期	SIGNING_DATE	datetime
制单人		INPUT_BY	varchar(30)
审单人		CHECK_BY	varchar(30)
验货员		INSPECTOR	varchar(30)
总金额		TOTAL_AMOUNT	numeric(10,2)
要求		REQUEST		varchar(200)
客户名称	CUSTOM_NAME	varchar(200)
船期		SHIP_TIME	datetime
重要程度	IMPORT_NUM	int
交货期限	DELIVERY_PERIOD	datetime
说明		REMARK		varchar(600)
打印版式	PRINT_STYLE	char(1)
归档前状态	OLD_STATE	int
状态		STATE		int
走货状态	OUT_STATE	int

创建人		CREATE_BY	varchar(40)
创建部门	CREATE_DEPT	varchar(40)
创建日期	CREATE_TIME	datetime


==合同商品明细	CONTRACT_PRODUCT_C

编号		CONTRACT_PRODUCT_ID	varchar(40)
CONTRACT_ID	CONTRACT_ID	varchar(40)
FACTORY_ID	FACTORY_ID	varchar(40)
EXPORT_LIST_ID	EXPORT_LIST_ID	varchar(40)
INVOICE_ID	INVOICE_ID	varchar(40)
产品名称	PRODUCT_NAME	varchar(200)
货号		PRODUCT_NO	varchar(50)
货物照片	PRODUCT_IMAGE	varchar(200)
货物描述	PRODUCT_DESC	varchar(600)
装率		LOADING_RATE	varchar(30)
包装单位	PACKING_UNIT	varchar(10)
数量		CNUMBER	int
实际出货数量	OUT_NUMBER	int
是否出货完毕	FINISHED	bit
毛重		GROSS_WEIGHT	numeric(10,2)
净重		NET_WEIGHT	numeric(10,2)
尺寸长		SIZE_LENGHT	numeric(10,2)
尺寸宽		SIZE_WIDTH	numeric(10,2)
尺寸高		SIZE_HEIGHT	numeric(10,2)
要求		PRODUCT_REQUEST	varchar(2000)
厂家		FACTORY		varchar(200)
单价		PRICE		numeric(10,2)
总金额		AMOUNT		numeric(10,2)
EL单位		CUNIT		varchar(10)
箱数		BOX_NUM		int
出口单价	EX_PRICE	numeric(10,2)
价格单位	EX_UNIT		varchar(10)
不含税		NO_TAX		numeric(10,2)
含税		TAX		numeric(10,2)
收购成本金额	COST_PRICE	numeric(10,2)
收购成本税金	COST_TAX	numeric(10,2)
是否是附件	ACCESSORIES	bit
排序号		ORDER_NO	int


==合同商品附件	EXT_CPRODUCT_C

EXT_CPRODUCT_ID		EXT_CPRODUCT_ID	varchar(40)
FACTORY_ID		FACTORY_ID	varchar(40)
CONTRACT_PRODUCT_ID	CONTRACT_PRODUCT_ID	varchar(40)
类型[系统下拉列表]	CTYPE		int
产品名称		PRODUCT_NAME	varchar(200)
货号			PRODUCT_NO	varchar(50)
货物照片		PRODUCT_IMAGE	varchar(200)
货物描述		PRODUCT_DESC	varchar(600)
装率			LOADING_RATE	varchar(30)
包装单位		PACKING_UNIT	varchar(10)
数量			CNUMBER		int
实际出货数量		OUT_NUMBER	int
是否出货完毕		FINISHED	bit
毛重			GROSS_WEIGHT	numeric(10,2)
净重			NET_WEIGHT	numeric(10,2)
尺寸长			SIZE_LENGHT	numeric(10,2)
尺寸宽			SIZE_WIDTH	numeric(10,2)
尺寸高			SIZE_HEIGHT	numeric(10,2)
要求			PRODUCT_REQUEST	varchar(2000)
厂家			FACTORY		varchar(200)
单价			PRICE		numeric(10,2)
总金额			AMOUNT		numeric(10,2)
EL单位			CUNIT		varchar(10)
件数			BOX_NUM		int
出口单价		EX_PRICE	numeric(10,2)
价格单位		EX_UNIT		varchar(10)
不含税			NO_TAX		numeric(10,2)
含税			TAX		numeric(10,2)
收购成本金额		COST_PRICE	numeric(10,2)
收购成本税金		COST_TAX	numeric(10,2)
是否是附件		ACCESSORIES	bit
排序号			ORDER_NO	int



3、实现业务

开发步骤：
1）建表 
2）编写	cn.itcast.entity	Contract.hbm.xml	ContractProduct.hbm.xml		ExtCproduct.hbm.xml
3）编写	cn.itcast.entity	Contract.java		ContractProduct.java		ExtCproduct.java
4）编写dao	cn.itcast.entity.dao
5）在hibernate.cfg.xml中声明
6）在beans.xml中声明
7）创建页面
8）创建ACTION
9）创建	struts-cargo.xml
10）入口链接	left.jsp
11）功能测试

		
1）建表

2）编写映射文件	cn.itcast.entity

Contract.hbm.xml


<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC 
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping package="cn.itcast.entity">
	<class name="Contract" table="CONTRACT_C">

		<id name="id" type="string" column="CONTRACT_ID" length="40">
			<generator class="uuid" />
		</id>
		
		<property name="offeror" column="OFFEROR" type="string" />
		<property name="contractNo" column="CONTRACT_NO" type="string" />
		<property name="signingDate" column="SIGNING_DATE" type="timestamp"/>
		<property name="inputBy" column="INPUT_BY" type="string" />
		<property name="checkBy" column="CHECK_BY" type="string" />
		<property name="inspector" column="INSPECTOR" type="string" />
		<property name="totalAmount" column="TOTAL_AMOUNT" type="big_decimal" />
		<property name="crequest" column="REQUEST" type="string" />
		<property name="customName" column="CUSTOM_NAME" type="string"/>
		<property name="shipTime" column="SHIP_TIME" type="timestamp"/>
		<property name="importNum" column="IMPORT_NUM" type="integer" />
		<property name="deliveryPeriod" column="DELIVERY_PERIOD" type="timestamp"/>
		<property name="remark" column="REMARK" type="string" />
		<property name="tradeTerms" column="TRADE_TERMS" type="string" />
		<property name="printStyle" column="PRINT_STYLE" type="string" />
		
		<property name="oldState" column="OLD_STATE" type="integer"/>
		<property name="state" column="STATE" type="integer"/>
		<property name="outState" column="OUT_STATE" type="integer"/>
		
		<property name="createBy" column="CREATE_BY" type="string" />
		<property name="createDept" column="CREATE_DEPT" type="string" />
		<property name="createTime" column="CREATE_TIME" type="timestamp" />

		<!-- Associations -->
		<set name="contractProduct" inverse="true" cascade="all" lazy="false" order-by="ORDER_NO">
			<key>
				<column name="CONTRACT_ID" />
			</key>
			<one-to-many class="cn.itcast.entity.ContractProduct" />
		</set>
	</class>
</hibernate-mapping>


ContractProduct.hbm.xml

<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC 
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping package="cn.itcast.entity">
	<class name="ContractProduct" table="CONTRACT_PRODUCT_C">

		<id name="id" type="string" column="CONTRACT_PRODUCT_ID" length="40">
			<generator class="uuid" />
		</id>
		
		<property name="productName" column="PRODUCT_NAME" type="string" />
		<property name="productNo" column="PRODUCT_NO" type="string" />
		<property name="productImage" column="PRODUCT_IMAGE" type="string" />
		<property name="productDesc" column="PRODUCT_DESC" type="string" />
		<property name="loadingRate" column="LOADING_RATE" type="string" />
		
		<property name="packingUnit" column="PACKING_UNIT" type="string" />
		<property name="cnumber" column="CNUMBER" type="integer" />
		<property name="outNumber" column="OUT_NUMBER" type="integer" />
		<property name="finished" type="boolean" column="FINISHED"/>
		
		<property name="grossWeight" column="GROSS_WEIGHT" type="big_decimal" />
		<property name="netWeight" column="NET_WEIGHT" type="big_decimal" />
		
		<property name="sizeLenght" column="SIZE_LENGHT" type="big_decimal" />
		<property name="sizeWidth" column="SIZE_WIDTH" type="big_decimal" />
		<property name="sizeHeight" column="SIZE_HEIGHT" type="big_decimal" />
		
		<property name="productRequest" column="PRODUCT_REQUEST" type="string" />
		<property name="price" column="PRICE" type="big_decimal" />
		<property name="amount" column="AMOUNT" type="big_decimal" />
		
		<property name="cunit" column="CUNIT" type="string" />
		<property name="boxNum" column="BOX_NUM" type="integer" />
		<property name="exPrice" column="EX_PRICE" type="big_decimal" />
		<property name="exUnit" column="EX_UNIT" type="string" />
		<property name="noTax" column="NO_TAX" type="big_decimal" />
		<property name="tax" column="TAX" type="big_decimal" />
		<property name="costPrice" column="COST_PRICE" type="big_decimal" />
		<property name="costTax" column="COST_TAX" type="big_decimal" />
		<property name="orderNo" column="ORDER_NO" type="integer" />
		
		<property name="accessories" type="boolean" column="ACCESSORIES"/>
		
		<!-- Associations -->
		<many-to-one name="factory" class="cn.itcast.entity.Factory" lazy="false">
			<column name="FACTORY_ID" length="40" />
		</many-to-one>
		<many-to-one name="contract" class="cn.itcast.entity.Contract" lazy="false">
			<column name="CONTRACT_ID" length="40" />
		</many-to-one>

		<set name="extCproduct" inverse="true" cascade="all" lazy="false" order-by="ORDER_NO">
			<key>
				<column name="CONTRACT_PRODUCT_ID" />
			</key>
			<one-to-many class="cn.itcast.entity.ExtCproduct" />
		</set>		

	</class>
</hibernate-mapping>


ExtCproduct.hbm.xml

<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC 
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping package="cn.itcast.entity">
	<class name="ExtCproduct" table="EXT_CPRODUCT_C">

		<id name="id" type="string" column="EXT_CPRODUCT_ID" length="40">
			<generator class="uuid" />
		</id>
		
		<property name="ctype" column="CTYPE" type="integer" />
		<property name="typeName" type="string" formula="(select c.NAME from SYS_CODE_B c where c.ORDER_NO=CTYPE and c.PARENT_ID='0104')" insert="false" update="false"  />
		
		<property name="productName" column="PRODUCT_NAME" type="string" />
		<property name="productNo" column="PRODUCT_NO" type="string" />
		<property name="productImage" column="PRODUCT_IMAGE" type="string" />
		<property name="productDesc" column="PRODUCT_DESC" type="string" />
		<property name="loadingRate" column="LOADING_RATE" type="string" />
		
		<property name="packingUnit" column="PACKING_UNIT" type="string" />
		<property name="cnumber" column="CNUMBER" type="integer" />
		<property name="outNumber" column="OUT_NUMBER" type="integer" />
		<property name="finished" type="boolean" column="FINISHED"/>
		
		<property name="grossWeight" column="GROSS_WEIGHT" type="big_decimal" />
		<property name="netWeight" column="NET_WEIGHT" type="big_decimal" />
		
		<property name="sizeLenght" column="SIZE_LENGHT" type="big_decimal" />
		<property name="sizeWidth" column="SIZE_WIDTH" type="big_decimal" />
		<property name="sizeHeight" column="SIZE_HEIGHT" type="big_decimal" />
		
		<property name="productRequest" column="PRODUCT_REQUEST" type="string" />
		<property name="price" column="PRICE" type="big_decimal" />
		<property name="amount" column="AMOUNT" type="big_decimal" />
		
		<property name="cunit" column="CUNIT" type="string" />
		<property name="boxNum" column="BOX_NUM" type="integer" />
		<property name="exPrice" column="EX_PRICE" type="big_decimal" />
		<property name="exUnit" column="EX_UNIT" type="string" />
		<property name="noTax" column="NO_TAX" type="big_decimal" />
		<property name="tax" column="TAX" type="big_decimal" />
		<property name="costPrice" column="COST_PRICE" type="big_decimal" />
		<property name="costTax" column="COST_TAX" type="big_decimal" />
		<property name="orderNo" column="ORDER_NO" type="integer" />
		
		<property name="accessories" type="boolean" column="ACCESSORIES"/>
		
		<!-- Associations -->
		<many-to-one name="factory" class="cn.itcast.entity.Factory" lazy="false">
			<column name="FACTORY_ID" length="40" />
		</many-to-one>
		<many-to-one name="contractProduct" class="cn.itcast.entity.ContractProduct" lazy="false">
			<column name="CONTRACT_PRODUCT_ID" length="40" />
		</many-to-one>

	</class>
</hibernate-mapping>


3）编写	cn.itcast.entity

Contract.java


public class Contract {
	private Set<ContractProduct> contractProduct;
	
	private String id;
	private String offeror;
	private String contractNo;
	private Date signingDate;
	private String inputBy;
	private String checkBy;
	private String inspector;
	private BigDecimal totalAmount;
	private String crequest;
	private String customName;
	private Date shipTime;
	private Integer importNum;
	private Date deliveryPeriod;
	private String remark;
	private String tradeTerms;
	private String printStyle;
	private Integer oldState;
	private Integer state;
	private Integer outState;
	private String createBy;
	private String createDept;
	private Date createTime;
}


ContractProduct.java

public class ContractProduct {
	private String factoryId;				//many-to-one  下拉列表
	private Factory factory;
	private Contract contract;
	private Set<ExtCproduct> extCproduct;

	private String id;
	private String productName;
	private String productNo;
	private String productImage;
	private String productDesc;
	private String loadingRate;
	private String packingUnit;
	private Integer cnumber;
	private Integer outNumber;
	private boolean finished;
	private BigDecimal grossWeight;
	private BigDecimal netWeight;
	private BigDecimal sizeLenght;
	private BigDecimal sizeWidth;
	private BigDecimal sizeHeight;
	private String productRequest;
	private BigDecimal price;
	private BigDecimal amount;
	private String cunit;
	private Integer boxNum;
	private BigDecimal exPrice;
	private String exUnit;
	private BigDecimal noTax;
	private BigDecimal tax;
	private BigDecimal costPrice;
	private BigDecimal costTax;
	private Integer orderNo;
	private boolean accessories;
}


ExtCproduct.java

public class ExtCproduct {
	private String factoryId;				//many-to-one  下拉列表
	
	private Factory factory;
	private ContractProduct contractProduct;
	
	private String id;
	private Integer ctype;
	private String typeName;
	private String productName;
	private String productNo;
	private String productImage;
	private String productDesc;
	private String loadingRate;
	private String packingUnit;
	private Integer cnumber;
	private Integer outNumber;
	private boolean finished;
	private BigDecimal grossWeight;
	private BigDecimal netWeight;
	private BigDecimal sizeLenght;
	private BigDecimal sizeWidth;
	private BigDecimal sizeHeight;
	private String productRequest;
	private BigDecimal price;
	private BigDecimal amount;
	private String cunit;
	private Integer boxNum;
	private BigDecimal exPrice;
	private String exUnit;
	private BigDecimal noTax;
	private BigDecimal tax;
	private BigDecimal costPrice;
	private BigDecimal costTax;
	private Integer orderNo;
	private boolean accessories;
}

4）编写dao	cn.itcast.entity.dao	

public class ContractDAO extends _RootDAO {

}

public class ContractProductDAO extends _RootDAO {

}

public class ExtCproductDAO extends _RootDAO {

}


5）在hibernate.cfg.xml中声明

		<mapping resource="cn/itcast/entity/Contract.hbm.xml" />
		<mapping resource="cn/itcast/entity/ContractProduct.hbm.xml" />
		<mapping resource="cn/itcast/entity/ExtCproduct.hbm.xml" />

6）在beans.xml中声明

	<bean id="daoContract" class="cn.itcast.entity.dao.ContractDAO" autowire="byName"/>
	<bean id="daoContractProduct" class="cn.itcast.entity.dao.ContractProductDAO" autowire="byName"/>
	<bean id="daoExtCproduct" class="cn.itcast.entity.dao.ExtCproductDAO" autowire="byName"/>


7）创建页面	

目录cargo/contract/....jsp

8）创建ACTION


9）创建	struts-cargo.xml

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE struts PUBLIC
	"-//Apache Software Foundation//DTD Struts Configuration 2.1.7//EN"
	"http://struts.apache.org/dtds/struts-2.3.dtd">
<struts>
  	<package name="contract" namespace="/contract" extends="struts-default">
  		<action name="contractAction_*" method="{1}" class="cn.itcast.web.struts2.contract.ContractAction">
  			<result name="plist">/cargo/contract/jContractList.jsp</result>
  			<result name="pview">/cargo/contract/jContractView.jsp</result>
  			<result name="pcreate">/cargo/contract/jContractCreate.jsp</result>
  			<result name="pupdate">/cargo/contract/jContractUpdate.jsp</result>
  		</action>
  		
  		<action name="contractProductAction_*" method="{1}" class="cn.itcast.web.struts2.contract.ContractProductAction">
  			<result name="pproduct">/cargo/contract/jContractProductCreate.jsp</result>
  		</action>
  	</package>
  	
  	<package name="extcproduct" namespace="/extcproduct" extends="struts-default">
  		<action name="extCproductAction_*" method="{1}" class="cn.itcast.web.struts2.extcproduct.ExtCproductAction">
  			<result name="pext">/cargo/extcproduct/jExtCproductCreate.jsp</result>
  			<result name="pedit">/cargo/extcproduct/jExtCproductEdit.jsp</result>
  		</action>
  	</package>
  	
</struts>

10）入口链接	left.jsp


11）功能测试

