<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	                    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	                    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	                    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- 启动spring的注解 -->
	<context:annotation-config></context:annotation-config>

	<!-- 配置spring 扫描的路径 -->
	<context:component-scan base-package="com.zrgk"></context:component-scan>

	<!-- 启动 aspectJ 的注解 -->
	<aop:aspectj-autoproxy />

	<!-- 加载外部资源文件（properties文件） 要使用spring提供的 PropertyPlaceHolderConfigure -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:com/properties/jdbc.properties</value>
			</list>
		</property>
	</bean>

	<!-- 配置数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		
		<property name="driverClassName" value="${driverclass}"></property>
		<property name="url" value="${url}"></property>
		<property name="username" value="${username}"></property>
		<property name="password" value="${password}"></property>
		
		<!--连接池中保留的最小连接数。-->  
		<property name="minPoolSize" value="10" />  
		<!--连接池中保留的最大连接数。Default: 15 -->  
		<property name="maxPoolSize" value="100" />  
		<!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->  
		<property name="maxIdleTime" value="1800" />  
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->  
		<property name="acquireIncrement" value="3" />  
		<property name="maxStatements" value="1000" />  
		<property name="initialPoolSize" value="10" />  
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->  
		<property name="idleConnectionTestPeriod" value="60" />  
		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->  
		<property name="acquireRetryAttempts" value="30" />  
		<property name="breakAfterAcquireFailure" value="true" />  
		<property name="testConnectionOnCheckout" value="false" />  
	
		<property name="connectionProperties">
			<value>clientEncoding=utf-8</value>
		</property>
	</bean>


	<!-- 配置sessionFactory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<!-- 加载数据库信息 -->
		<property name="dataSource" ref="dataSource"></property>

		<!-- 配置数据库hibernate信息 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.connection.autocommit">true</prop>


				<!-- 指定要使用的缓存的提供商 -->
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<!-- 开启使用查询缓存 -->
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<!-- 开启使用二级缓存 -->
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<!-- 指明缓存规则 -->
				<prop key="hibernate.cache.configurationResourceName">ehcache.xml</prop>
			</props>
		</property>

		<!-- 配置映射信息 -->
		<property name="annotatedClasses">
			<list>
				<value>com.zrgk.entity.Account</value>
			</list>
		</property>
	</bean>



	<!-- 开启事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!-- 指定传播规则 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<!-- 哪些类的哪些方法 要被事务管理 -->
	<aop:config>
		<aop:pointcut expression="execution(* com.zrgk.service.impl.*.*(..))"
			id="trManager" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="trManager" />
	</aop:config>



</beans>